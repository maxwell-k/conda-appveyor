version: "{build}"

environment:
  auth_token:
    secure: JX1qsRmmO9Lw2BUk9rVv4Eht+1vvE3wCS56PXjcWDQhGZs+Kj/38hzYb8T6zMKuS

install: # Install and update conda
  - cd %APPVEYOR_BUILD_FOLDER% # C:\projects\conda-appveyor
  - >
      appveyor DownloadFile
      http://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.exe
  - .\Miniconda3-latest-Windows-x86_64.exe /S /D=C:\Python34-x64
  - del .\Miniconda3-latest-Windows-x86_64.exe
  - set PATH=C:\Python34-x64\Scripts;%PATH%
  - conda update conda --yes -q
  # jinja2 To avoid error messages about importing
  - conda install anaconda-client conda-build jinja2 --yes -q
# Visual Studio 2010 Express as installed by AppVeyor doesn't include a 64 bit
# compiler so the generated header produces an error:
# "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" amd64
# The specificed configuration type is missing...
# https://github.com/conda/conda-build/blob/master/conda_build/windows.py#L56
# Using the SDK is a work around:
# http://help.appveyor.com/discussions/questions/213-platform-x86-is-not-32-bit
  - '"C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64'

build_script:
  - cd %APPVEYOR_BUILD_FOLDER% # C:\projects\conda-appveyor
  - conda build winshell -q
  - conda build 7za-9.20 -q
  - conda build 7za -q  # 7z or 7za must already be installed
  - conda build httplib2 -q
  - conda build pyasn1 -q
  - conda build pysasn-modules -q
  - conda build oauth2client -q
  - conda build google-api-python-client -q

after_build:
  - cd C:\Python34-x64\conda-bld\win-64\
# A second, identical appveyor build results in a conflict that shows as a
# build failure. To add a new build increment the build number in meta.yaml.
  - >
      for %%i in (
      7za-*.tar.bz2
      winshell-*.tar.bz2
      httplib2-*.tar.bz2
      pyasn1-*.tar.bz2
      pyasn1_modules-*.tar.bz2
      oauth2client-*.tar.bz2
      google-api-python-client-*.tar.bz2
      ) do (
      appveyor PushArtifact %%i &&
      anaconda -t %auth_token% upload --no-progress %%i 2> nul ||
      cmd /c "exit /b 0"
      )

# To debug using Remote Desktop Protocal (RDP):
# - ps: >
#     $blockRdp = $true;
#     iex ((new-object net.webclient).DownloadString(("{0}{1}" -f
#     'https://raw.githubusercontent.com/appveyor/ci/master/scripts/',
#     'enable-rdp.ps1')))
